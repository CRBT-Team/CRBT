generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model profiles {
  id                String    @id
  verified          Boolean?  @default(false)
  crbt_banner       String?
  crbt_accent_color String?
  bio               String?
  purplets          Float     @default(0) @db.Real
  name              String?   @unique
  crbt_badges       String[]
  url               String?
  birthday          DateTime? @db.Timestamptz(6)
}

model reminders {
  id          BigInt   @id @default(autoincrement())
  expiration  DateTime @db.Timestamptz(6)
  userId      String   @map("user_id")
  destination String
  reminder    String?
  url         String
  locale      String?
}

model servers {
  id           String  @id
  voiceLinker  Json?   @map("voice_linker") @db.Json
  joinChannel  String? @map("join_channel")
  joinMessage  Json?   @map("join_message")
  leaveChannel String? @map("leave_channel")
  leaveMessage Json?   @map("leave_message")
}

model users {
  id          String  @id(map: "misc_pkey")
  hstreak     Int     @default(0) @db.SmallInt
  telemetry   Boolean @default(true)
  accentColor String? @map("accent_color")
  // job_type  Jobs?
  // job_exp   Int     @default(0)
}

model inventories {
  serverId    String   @id @map("server_id")
  userId      String   @map("user_id")
  items       BigInt[]
  activeItems BigInt[] @map("active_items")
}

model economy {
  id                  String            @id
  currencyName        String            @map("currency_name")
  currencySymbol      String            @map("currency_symbol")
  enabledCommands     EconomyCommands[] @map("enabled_commands")
  // hourly streaks & cooldowns for crime & work
  commandsConstraints Json              @map("commands_cooldown")
}

model economy_strings {
  serverId String          @id @map("server_id")
  type     EconomyCommands
  gain     Int
  text     String          @unique
}

model economy_items {
  id             BigInt    @id @default(autoincrement())
  serverId       String    @map("server_id")
  name           String
  icon           String?
  description    String?
  price          Int
  category       String
  type           ItemTypes
  stock          Int
  // for items limited in time
  availableUntil DateTime? @map("available_until") @db.Timestamptz(6)
  // the value an item can hold (role ID, Multiplier, etc)
  value          String?
}

enum EconomyCommands {
  work
  hourly
  crime
}

enum ItemTypes {
  ROLE
  WEAPON
  INCOME_MULTIPLIER
  COSMETIC
  OTHER
}

model polls {
  id        String @id
  creatorId String @map("creator_id")
  choices   String
}

// enum Jobs {
//   FARMER
//   CASHIER
//   BAKER
//   COOK
//   DEVELOPER
//   DOCTOR
//   TEACHER
//   ENGINEER
//   POLICE_OFFICER
//   FIREFIGHTER
//   NURSE
//   LAWYER
//   MUSICIAN
//   ATHLETE
//   STREAMER
//   ARTIST
//   WRITER
//   INFLUENCER
// }
